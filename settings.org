Emacs configuration

* Appearance and general settings
** General

#+BEGIN_SRC emacs-lisp

;; Not sure what this does so it is commented out for the time being...
;;(custom-set-faces)                      

;; Set typeface to 18.0
(set-face-attribute 'default nil :height 180)

;; Turn column number on by default
(setq column-number-mode t)

;; Save backups elsewhere
(setq backup-directory-alist '(("." . "~/.emacs.d/backups")))


;; Make things look nice when in windowed emacs
(when window-system
  (tooltip-mode -1)
  (tool-bar-mode -1)
  (menu-bar-mode -1)
  (scroll-bar-mode -1)
  (set-frame-size (selected-frame) 85 90))

#+END_SRC

** Indentation

#+BEGIN_SRC emacs-lisp

;; Set tabs to four spaces
(setq-default indent-tabs-mode nil)
(setq-default tab-width 4)
(setq indent-line-function 'insert-tab)

;; Auto-indent, currently disabled because can't play nice with python...
(electric-indent-mode -1)
;; ...but not for org-mode
;; (add-hook 'org-mode-hook
;;   (lambda ()
;;     (add-hook 'electric-indent-functions
;;       (lambda () 'no-indent) nil 'local)))

#+END_SRC

** Theme

#+BEGIN_SRC emacs-lisp

;; Change theme
;; These were set from within emacs, learn how to set these on my own
(custom-set-variables
  '(custom-enabled-themes (quote (misterioso)))
  '(inhibit-default-init nil)
  '(inhibit-startup-buffer-menu t)
  '(inhibit-startup-screen t))

#+END_SRC
  
* Deft settings

#+BEGIN_SRC emacs-lisp

(setq deft-directory "~/Dropbox/gnotes")
(setq deft-extension "txt")
(setq deft-text-mode 'org-mode)
(setq deft-use-filename-as-title t)
(setq deft-auto-save-interval 0)

(global-set-key (kbd "C-c d") 'deft)

#+END_SRC

* MELPA settings

#+BEGIN_SRC emacs-lisp

(require 'package)
(add-to-list 'package-archives
  '("melpa" . "http://melpa.org/packages/") t)
(when (< emacs-major-version 24)
   ;; For important compatibility libraries like cl-lib
  (add-to-list 'package-archives '("gnu" . "http://elpa.gnu.org/packages/")))
(package-initialize)

#+END_SRC

* Org settings
** General settings

#+BEGIN_SRC emacs-lisp

(setq org-refile-targets '((org-agenda-files . (:maxlevel . 6))))

;; Open .org and .txt files in org-mode
(add-to-list 'auto-mode-alist '("\\.org\\'" . org-mode))
(add-to-list 'auto-mode-alist '("\\.txt\\'" . org-mode))

;; This makes it so I can have check boxes auto-uncheck when 
;; repea tingtask is completed              
(add-to-list 'load-path "~/.emacs.d/lisp/")
(require 'org-checklist)

#+END_SRC

** Agenda views

#+BEGIN_SRC emacs-lisp

;; Agenda view for tasks that don't have a DEADLINE
(setq org-agenda-custom-commands
  '(("u" tags "-DEADLINE={.+}/+TODO"))) 

(setq org-agenda-files '("~/Dropbox/org_files/da_guai.org"
                         "~/Dropbox/org_files/inbox.org")) 

#+END_SRC
** Capture
*** Templates
#+BEGIN_SRC emacs-lisp

(setq org-capture-templates
  '(("i" "New TODO to Inbox" entry (file+headline 
    "~/Dropbox/org_files/inbox.org" "Inbox")
    "* TODO %?")

  ("d" "New journal entry" entry (file 
    "~/Dropbox/org_files/daydayup.org")
    "* %T\n\n%?" :prepend t :empty-lines 1)

  ("n" "Notes" plain (file 
    "~/Dropbox/org_files/notes.org")
    "----------%T----------\n\n%?" :prepend t :empty-lines 1)))

#+END_SRC

** Hotkeys

#+BEGIN_SRC emacs-lisp

(global-set-key "\C-cl" 'org-store-link)
(global-set-key "\C-cc" 'org-capture)
(global-set-key "\C-ca" 'org-agenda)
(global-set-key "\C-cb" 'org-iswitchb)

;; Hotkeys for capture templates

(define-key global-map "\C-ci" ;inbox
  (lambda () (interactive) (org-capture nil "i")))
(define-key global-map "\C-cnn" ;new note
  (lambda () (interactive) (org-capture nil "n")))

#+END_SRC

* Auto-complete

#+BEGIN_SRC emacs-lisp

(require 'auto-complete)
(require 'auto-complete-config)
(add-to-list 'ac-dictionary-directories "~/.emacs.d/ac-dict")
(ac-config-default)
(global-auto-complete-mode t)

#+END_SRC

* Fill-column-indicator
#+BEGIN_SRC emacs-lisp

(add-to-list 'load-path "~/.emacs.d/fill-column-indicator-1.83")
(require 'fill-column-indicator)
(define-globalized-minor-mode
  global-fci-mode fci-mode (lambda () (fci-mode 1)))
(global-fci-mode t)
(setq-default fill-column 80)

#+END_SRC
